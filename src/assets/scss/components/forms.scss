@import "../varibles";

@mixin input-style($border-color, $border-focus-color) {
    border: 1px solid $border-color;
    &:hover:not(.disabled, [disabled]) {
        border-color: darken($border-color, 20);
    }
    &:focus, &.focus {
        border-color: $border-focus-color;
        box-shadow: inset 0 0 0 1px $border-focus-color;
    }
    &.disabled, &[disabled] {
        background-color: hsla(hue($border-color), saturation($border-color), lightness($border-color), .2);
    }
}

@mixin input-size($v, $h, $radius, $font-size) {
    padding: $v $h;
    line-height: $line-height;
    font-size: $font-size;
    height: $font-size + ($h - 1) * 2;
    @if $form-control-radius-is-open {
        border-radius: $radius;
    }
    &.disabled, &[disabled] {
        opacity: .5;
        cursor: not-allowed;
    }
}

.form-control {
    display: block;
    width: 100%;
    background: none;
    @include input-style($form-control-border-color, $form-control-focus-border-color);
    @include input-size($form-control-padding-vertical, $form-control-padding-horizontal, $form-control-radius, $form-control-font-size-base);
    &.input-sm {
        @include input-size($form-control-padding-vertical-sm, $form-control-padding-horizontal-sm, $form-control-radius-sm, $form-control-font-size-sm);
    }
    &.input-lg {
        @include input-size($form-control-padding-vertical-lg, $form-control-padding-horizontal-lg, $form-control-radius-lg, $form-control-font-size-lg);
    }
    &.has-success {
        @include input-style($form-control-border-color-success, $form-control-border-color-success);
    }
    &.has-info {
        @include input-style($form-control-border-color-info, $form-control-border-color-info);
    }
    &.has-warning {
        @include input-style($form-control-border-color-warning, $form-control-border-color-warning);
    }
    &.has-danger {
        @include input-style($form-control-border-color-danger, $form-control-border-color-danger);
    }
}